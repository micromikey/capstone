version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: hikethere_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: hikethere_root_password
      MYSQL_DATABASE: hikethere
      MYSQL_USER: hikethere_user
      MYSQL_PASSWORD: hikethere_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - hikethere_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-phikethere_root_password"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    container_name: hikethere_app
    ports:
      - "8080:8080"
    environment:
      # Application
      APP_NAME: HikeThere
      APP_ENV: local
      APP_DEBUG: "true"
      APP_URL: http://localhost:8080
      APP_TIMEZONE: Asia/Manila
      
      # Database (connects to mysql service)
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: hikethere
      DB_USERNAME: hikethere_user
      DB_PASSWORD: hikethere_password
      
      # Session & Cache
      SESSION_DRIVER: database
      CACHE_STORE: database
      QUEUE_CONNECTION: database
      
      # Filesystem (use local for development)
      FILESYSTEM_DISK: local
      
      # Mail (use log for development)
      MAIL_MAILER: log
      
      # ML Service (connects to ml-service)
      ML_RECOMMENDER_URL: http://ml-service:8001
      
      # API Keys (add your keys here)
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY:-}
      ORS_API_KEY: ${ORS_API_KEY:-}
      OPENWEATHER_API_KEY: ${OPENWEATHER_API_KEY:-}
      PAYMONGO_PUBLIC_KEY: ${PAYMONGO_PUBLIC_KEY:-pk_test_your_key}
      PAYMONGO_SECRET_KEY: ${PAYMONGO_SECRET_KEY:-sk_test_your_key}
    volumes:
      # Mount source code for development (hot reload)
      - ./app:/app/app
      - ./resources:/app/resources
      - ./routes:/app/routes
      - ./config:/app/config
      - ./database:/app/database
      - ./public:/app/public
      # Persistent storage
      - storage_data:/app/storage
      - ./bootstrap/cache:/app/bootstrap/cache
    depends_on:
      mysql:
        condition: service_healthy
      ml-service:
        condition: service_started
    networks:
      - hikethere_network
    restart: unless-stopped
    command: >
      sh -c "
        php artisan config:clear &&
        php artisan cache:clear &&
        php artisan migrate --force &&
        php artisan storage:link &&
        /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf
      "

  # ML Recommender Service
  ml-service:
    build:
      context: ./ml-prototype
      dockerfile: Dockerfile
    container_name: hikethere_ml
    ports:
      - "8001:8001"
    environment:
      - ML_ARTIFACT_DIR=/app/artifacts
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount ML code for development
      - ./ml-prototype:/app
      # Persistent model artifacts
      - ml_artifacts:/app/artifacts
    networks:
      - hikethere_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: hikethere_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hikethere_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  hikethere_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  storage_data:
    driver: local
  ml_artifacts:
    driver: local
  redis_data:
    driver: local
